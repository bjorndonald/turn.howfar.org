# Alternative Dockerfile that builds from source
# This is a fallback if you have access to the source code

FROM golang:alpine AS builder

# Install build dependencies
RUN apk add --no-cache git gcc musl-dev

# Set working directory
WORKDIR /src

# Copy source code (you'll need to add your source files)
# COPY . .

# Build the binary
# RUN go build -o stunserver ./cmd/stunserver
# OR for C/C++: RUN gcc -o stunserver -static *.c

# Final stage
FROM alpine:latest

# Install runtime dependencies
RUN apk add --no-cache ca-certificates

# Set working directory
WORKDIR /app

# Copy binary from builder stage
# COPY --from=builder /src/stunserver /app/stunserver

# For now, we'll use a placeholder - you need to uncomment and modify the above lines
RUN echo "This Dockerfile needs to be configured with your source code" > /app/stunserver
RUN chmod +x /app/stunserver

# Expose the STUN server port
EXPOSE 3478

# Set the default command
CMD ["./stunserver", "--primaryport", "3478"] 